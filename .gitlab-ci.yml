setup:
  stage: .pre
  image: nixos/nix
  cache:
    paths:
      - /nix/store/*
  before_script: |
    mkdir -p ~/.ssh
    chmod 700 ~/.ssh
    # install ssh private key
    eval $(ssh-agent -s)
    chmod 400 "$SSH_PRIVATE_KEY"
    ssh-add "$SSH_PRIVATE_KEY"
    # install known_kosts
    cp "$SSH_KNOWN_HOSTS" ~/.ssh/known_hosts
    chmod 644 ~/.ssh/known_hosts
    # install ssh config
    cp "$SSH_CONFIG" ~/.ssh/config
    chmod 644 ~/.ssh/config
    # enable flakes and nix command
    mkdir -p ~/.config/nix
    echo 'experimental-features = nix-command flakes' > ~/.config/nix/nix.conf
    # set git names
    git config --global user.email "fscs@hhu.de"
    git config --global user.name "Knut"

lock-update:
  stage: build
  image: nixos/nix
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
  script: |
    # update website input
    nix flake lock --update-input ${CI_NIX_UPDATE_INPUT}
    # git commit
    git add flake.lock
    git status
    git commit \
      -m "updated ${CI_NIX_UPDATE_INPUT} to $(cat flake.lock | nix run nixpkgs#jq -- -r .nodes.${CI_NIX_UPDATE_INPUT}.locked.rev)"
    # aaaand push
    git push origin main

deploy:
  stage: deploy
  image: nixos/nix
  interruptible: true
  rules:
    - if: $CI_PIPELINE_SOURCE != "pipeline"
  script: |
    nix develop -c nixos-rebuild --flake . --target-host gitlab@fscs.hhu.de --build-host gitlab@fscs.hhu.de switch --use-remote-sudo
