default:
  tags:
    - nix
  before_script: |
    mkdir -p ~/.ssh
    chmod 700 ~/.ssh

    # import private key into ssh agent
    eval $(ssh-agent -s)
    chmod 400 "$SSH_PRIVATE_KEY"
    ssh-add "$SSH_PRIVATE_KEY"

    # install known_kosts and ssh config
    cp "$SSH_KNOWN_HOSTS" ~/.ssh/known_hosts
    cp "$SSH_CONFIG" ~/.ssh/config
    chmod 644 ~/.ssh/known_hosts ~/.ssh/config

    # enable flakes and nix command
    mkdir -p ~/.config/nix
    echo 'experimental-features = nix-command flakes' > ~/.config/nix/nix.conf

    # set git user info
    git config --global user.email "fscs@hhu.de"
    git config --global user.name "Knut"

    # correct git origin
    git remote set-url origin git@git.hhu.de:fscs/raete/teenix

lock-update:
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
  script: |
    nix flake update ${CI_NIX_UPDATE_INPUT}
  artifacts:
    expire_in: 48 hrs
    paths:
      - flake.lock

deploy:
  stage: deploy
  only:
    - main
  script: |
    # dont auto deploy testfax, its for testing after all
    nix develop -c colmena apply \
      --experimental-flake-eval \
      --on teefax

commit-lockfile:
  stage: .post
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline" && $CI_COMMIT_BRANCH == "main"
  script: |
    # if nothing changed, dont try to commit
    if git diff -s --exit-code flake.lock; then echo "lockfile unchanged, not commiting"; exit; fi
    # git commit
    git add flake.lock
    git status
    git commit \
      -m "updated ${CI_NIX_UPDATE_INPUT} to $(cat flake.lock | nix run nixpkgs#jq -- -r .nodes.\"${CI_NIX_UPDATE_INPUT}\".locked.rev[0:7])"
    # aaaand push
    git push -o ci.skip origin HEAD:main
